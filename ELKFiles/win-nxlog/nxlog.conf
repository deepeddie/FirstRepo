## This is a sample configuration file. See the nxlog reference manual about the
## configuration options. It should be installed locally and is also available
## online at http://nxlog.org/nxlog-docs/en/nxlog-reference-manual.html

## Please set the ROOT to the folder your nxlog was installed into,
## otherwise it will not start.

#define ROOT C:\Program Files\nxlog
define ROOT C:\Program Files (x86)\nxlog

Moduledir %ROOT%\modules
CacheDir %ROOT%\data
Pidfile %ROOT%\data\nxlog.pid
SpoolDir %ROOT%\data
LogFile %ROOT%\data\nxlog.log
SuppressRepeatingLogs FALSE


# Include fileop while debugging, also enable in the output module below
<Extension fileop>
    Module      xm_fileop
</Extension>
 
# Create the parse rule for IIS logs. You can copy these from the header of the IIS log file.
<Extension w3c>
    Module xm_csv
    Fields $date, $time, $s-ip, $cs-method, $cs-uri-stem, $cs-uri-query, $s-port, $cs-username, $c-ip, $csUser-Agent, $sc-status, $sc-substatus, $sc-win32-status, $time-taken
    FieldTypes string, string, string, string, string, string, integer, string, string, string, integer, integer, integer, integer
    Delimiter ' '
</Extension>

<Extension json>
    Module      xm_json
</Extension>
  
# Nxlog internal logs
<Input internal>
   Module im_internal
   Exec $EventReceivedTime = integer($EventReceivedTime) / 1000000; to_json();
</Input>
  
 
# Windows Event Log
<Input eventlog>
# Uncomment im_msvistalog for Windows Vista/2008 and later 
   Module im_msvistalog
  
# Uncomment im_mseventlog for Windows XP/2000/2003
#   Module im_mseventlog
 
   Exec $EventReceivedTime = integer($EventReceivedTime) / 1000000; to_json();
</Input>

# removed the parse csv method #w3c->parse_csv();
#           $Message = to_json();				
<Input IIS_Logs>
   Module    im_file
   File    "C:\\inetpub\\logs\\LogFiles\\W3SVC1\\u_ex*"
   SavePos  TRUE
   InputType	LineBased

   Exec if $raw_event =~ /^#/ drop(); 				\
       else 										\
       { 											\
           $LogSource = "live-iislogs";				\
           $LogEntry = $raw_event;					\
       }
</Input>

<Output out>
   Module om_tcp
   ######## CHANGE DESTINATION IP & PORT ###########
   Host ip-172-31-7-223.us-west-2.compute.internal 
   Port 3515
   OutputType	LineBased
   Exec to_json();

</Output>

<Output outfile>
    Module	om_file
    File	"c:\\temp\\output\\nxlog\\json.txt"
</Output>

 
<Route 1>
	#internal, eventlog, outfile
	Path IIS_Logs => out
</Route>
